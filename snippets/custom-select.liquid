{% comment %}
     - To pass hard coded value use this syntax
    {% render 'custom-select', data: "[{label: 'one', value:'two'}]" %}

    - If you only have an array of values and you want to pass it you can use format option
    {% render 'custom-select', data: option.values, format: true %}
{% endcomment %}

{% assign select_id = 100 | rand: 2000 %}

{% style %}
#custom-select-{{select_id}} {
  position: relative;
  min-width: 250px;
}

#custom-select-{{select_id}} select * {
  display:none;
}

#custom-select-{{select_id}} select {
  font-family: var(--yc-font-family);
  appearance: none;
  border: 1px solid #E6E6E6;
  cursor: pointer;
  padding: 10px;
  width: 100%;
  display: block !important;
  border-radius: 5px;
  font-style: normal;
  font-style: normal;
  font-weight: 300;
  font-size: 16px;
  line-height: 20px;
}

#custom-select-{{select_id}} .dropdown-list {
  background-color: #fff;
  border: 1px solid #E6E6E6;
  display: none;
  max-height: 150px;
  overflow-y: auto;
  position: absolute;
  top: 117%;
  width: 100%;
  z-index: 1;
  filter: drop-shadow(0px 4px 4px rgba(193, 193, 193, 0.22));
  border-radius: 5px;
}

#custom-select-{{select_id}} .dropdown-list.show {
  display: block;
}

#custom-select-{{select_id}} .dropdown-option {
  cursor: pointer;
  padding: 10px;
}

#custom-select-{{select_id}} .dropdown-option:hover {
  background-color: #F7F7F7;
}

#custom-select-{{select_id}} .select-icon {
    position: absolute;
    top: 50%;
    left: 20px;
    transform: translateY(-50%);
    font-size: 0.8em;
    color: #666;
}
{% endstyle %}

<div class="custom-select" id="custom-select-{{ select_id }}">
  <select></select>
  <span class="select-icon">{% render 'icon', name: 'chevron_down' %}</span>
  <div class="dropdown-list"></div>
</div>

<script>

function formatOptions(str) {
  const arr = JSON.parse(str.slice(1, -1));
  const arabicArr = arr.map((elem) => {
    return elem.replace(/\\u([\dA-F]{4})/gi, function (match, hex) {
      return String.fromCharCode(parseInt(hex, 16));
    });
  });
  return arabicArr;
}

function setCustomSelect(){
    const select_options =  {% if format %} `{{data | json}}` {% else %} {{ data }} {% endif %};

    const select = document.querySelector('#custom-select-{{select_id}} select');
    const list = document.querySelector('#custom-select-{{select_id}} .dropdown-list');

    const format = {% if format %} true {% else %} false {% endif %};

    const options =  format ? formatOptions(select_options).map(option => ({label: option, value: option})) : select_options;

    options.forEach(option => {
      const selectOption = document.createElement('option');
      selectOption.value = option.value;
      selectOption.text = option.label;
      select.appendChild(selectOption);

      const dropdownOption = document.createElement('div');
      dropdownOption.classList.add('dropdown-option');
      dropdownOption.dataset.value = option.value;
      dropdownOption.textContent = option.label;
      list.appendChild(dropdownOption);
    });

    select.addEventListener('click', event => {
      event.preventDefault();
      list.classList.toggle('show');
    });

    list.addEventListener('click', event => {
    if (event.target.classList.contains('dropdown-option')) {
        select.value = event.target.dataset.value;
        list.classList.remove('show');
    }
    });
}

setCustomSelect()
</script>
